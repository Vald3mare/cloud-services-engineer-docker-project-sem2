name: Docker Project Deploy

on:
  push:
    branches: [ main, dev ]
  workflow_dispatch:
    inputs:
      profile:
        description: "Что запускать через compose?"
        type: choice
        required: true
        default: prod
        options: [ prod, dev ]

jobs:
  build_and_push_to_docker_hub:
    name: Build & Push images
    runs-on: self-hosted
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend/
          push: true
          tags: ${{ secrets.DOCKER_USER }}/docker-project-backend:latest

      - name: Build & Push Frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend/
          push: true
          tags: ${{ secrets.DOCKER_USER }}/docker-project-frontend:latest

  compose-prod:
    name: Compose up (prod)
    runs-on: self-hosted
    needs: build_and_push_to_docker_hub
    if: ${{ github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.profile == 'prod') }}
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Compose up --profile prod
        run: |
          docker compose -f ./docker-compose.yml --profile prod pull || true
          docker compose -f ./docker-compose.yml --profile prod up -d --wait
          docker compose -f ./docker-compose.yml --profile prod ps
          docker ps --format 'table {{.Names}}\t{{.Status}}\t{{.Ports}}'

  compose-dev:
    name: Compose up (dev)
    runs-on: self-hosted
    needs: build_and_push_to_docker_hub
    if: ${{ github.ref == 'refs/heads/dev' || (github.event_name == 'workflow_dispatch' && github.event.inputs.profile == 'dev') }}
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Compose up --profile dev
        run: |
          docker compose -f ./docker-compose.yml --profile dev pull || true
          docker compose -f ./docker-compose.yml --profile dev up -d --wait
          docker compose -f ./docker-compose.yml --profile dev ps
          docker ps --format 'table {{.Names}}\t{{.Status}}\t{{.Ports}}'
